<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<inbound>
        <rate-limit-by-key calls="5" renewal-period="30" counter-key="@(context.Request.IpAddress)" remaining-calls-variable-name="remainingCallsPerIP" />
		<base />
		<!--<set-header name="Authorization" exists-action="override">
			<value>Bearer apify_api_xxxyyyzzz</value>
		</set-header>-->
		<choose>
			<!--<when condition="@(context.Request.Headers.ContainsKey("Ocp-Apim-Subscription-Key"))">-->
            <when condition="@(context.Request.Headers.GetValueOrDefault("Ocp-Apim-Subscription-Key") == "{{Ocp-Apim-Subscription-Key}}")">   
				<!-- Proceed normally -->
			</when>
			<otherwise>
				<return-response>
					<set-status code="401" reason="Unauthorized" />
					<set-header name="Content-Type" exists-action="override">
						<value>application/json</value>
					</set-header>
					<set-body>{
                    "error": "Invalid or Missing required header 'x-my-key'"
                }</set-body>
				</return-response>
			</otherwise>
		</choose>
		<!-- Control if and how the requests are forwarded to services  -->
	</inbound>
	<backend>
		<base />
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
	</on-error>
</policies>